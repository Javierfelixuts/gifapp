{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","console","log","target","handleInputChange","getGifs","categorie","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","srcSet","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","item","i","ReactDOM","render","document","getElementById"],"mappings":"mMAgCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAgBrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAW,SAACP,GAAD,OAlBG,SAACA,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,OAgBGK,CAAkBX,S,+BCvBvCY,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,qDACuCC,UAAUH,GADjD,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCWLO,EATK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACzB,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,EAAOO,OAAO,KAClC,4BAAIP,QC0BDQ,EA5BC,SAAC,GAAiB,IAAhBpB,EAAe,EAAfA,UAAe,ECDL,SAACA,GAAe,IAAD,EACbjB,mBAAS,CAC/BwB,KAAM,GACNc,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAoBvC,OAdAC,qBAAW,WACPzB,EAAQC,GACHyB,MAAM,SAAAC,GAECH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAI1B,CAAErB,IAIEsB,EDfyBK,CAAa3B,GAAjCa,EAJiB,EAItBN,KAAac,EAJS,EAITA,QAGpB,OACI,qCACA,6BAAKrB,IACJqB,GAAW,yCAAW,sBAAML,UAAU,mCAAhB,oBACvB,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEQdiB,EAvBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,kBAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAKvB,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ+C,EAAWpB,KAAI,SAACqB,EAAMC,GAAP,OACf,cAAC,EAAD,CAEI/B,UAAW8B,GADNA,Y,MCb7BE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.319fbea8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value)\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cat => [inputValue,...cat])\r\n            setinputValue('')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ (e) => handleInputChange(e)}\r\n                />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\nexport default AddCategory\r\n","export const getGifs = async(categorie) => {\r\n    const url = `https://api.giphy.com/v1/stickers/search?q=${encodeURI(categorie)}&limit=10&api_key=s7seAftZAcSjNIVbJNDXQZ3veyith54H`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <img src={url} alt={title} srcSet=\"\"/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({categorie}) => {\r\n\r\n  \r\n\r\n    const {data:images, loading} =  useFetchGifs(categorie);\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3>{categorie}</h3>\r\n        {loading && <p>Loading <span className=\"animate__animated animate__flash\">...</span></p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n            images.map(img => \r\n                (<GifGridItem \r\n                    key={img.id}\r\n                    {...img} />)\r\n                )\r\n            \r\n                \r\n            }\r\n           \r\n        </div>\r\n    </>\r\n\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (categorie) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    })\r\n    useEffect( () => {\r\n        getGifs(categorie)\r\n            .then( imgs => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                \r\n            })\r\n    }, [ categorie ] )\r\n\r\n\r\n   \r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <h3>Gif Expert App</h3>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map((item, i) => \r\n                    <GifGrid \r\n                        key={item} \r\n                        categorie={item} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}